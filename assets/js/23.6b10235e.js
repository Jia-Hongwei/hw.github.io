(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{340:function(s,t,a){"use strict";a.r(t);var n=a(7),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-线性数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-线性数据结构"}},[s._v("#")]),s._v(" 1. 线性数据结构")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("线性表结构：")]),s._v(" "),t("ul",[t("li",[s._v("数组")]),s._v(" "),t("li",[s._v("链表")]),s._v(" "),t("li",[s._v("队列")]),s._v(" "),t("li",[s._v("栈")])])]),s._v(" "),t("h3",{attrs:{id:"_1-1-数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-数组"}},[s._v("#")]),s._v(" 1.1 数组")]),s._v(" "),t("blockquote",[t("p",[s._v("数组（Array）是一种线性表数据结构。它用一组连续的内存空间，来存储一组具有相同类型的数据。")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 动态初始化：初始化时指定数组长度，由系统为数组元素分配初始值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 静态初始化： 初始化时显示置顶每个数组的初始值，由系统决定数组长度")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'E'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'D'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'U'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'Y'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'U'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" c3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'E'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'D'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'U'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'Y'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token char"}},[s._v("'U'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("具有如下的特点：")]),s._v(" "),t("ul",[t("li",[s._v("内存地址连续，")]),s._v(" "),t("li",[s._v("可以通过下标的成员访问,下标访问的性能高")]),s._v(" "),t("li",[s._v("增删操作带来更大的性能消耗(保证数据越界的问题,需动态扩容)")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.4sxi2btqe600.webp"}}),s._v(" "),t("h3",{attrs:{id:"_1-2-队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-队列"}},[s._v("#")]),s._v(" 1.2 队列")]),s._v(" "),t("blockquote",[t("p",[s._v("队列（queue）是只允许在一端进行插入操作，而在另一端进行删除操作的线性表。")]),s._v(" "),t("p",[s._v("队列中数据的特点：先进先出，后进后出。")])]),s._v(" "),t("p",[t("strong",[s._v("队列的操作")]),s._v("：允许插入的一端称为队尾，允许删除的一端称为队头。我们可以将其想象成一个链表，队头就是这个链表中的第一个节点，队尾就是这个链表中的最后一个节点，然而我们只能对这个链表进行\n尾插、头删操作。")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.4phxglf1u6q0.webp"}}),s._v(" "),t("blockquote",[t("p",[t("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("数据结构演示地址"),t("OutboundLink")],1)])]),s._v(" "),t("p",[s._v("入队列\n"),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.2pz3g3uny440.webp"}})]),s._v(" "),t("p",[s._v("出队列\n"),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.2xl0tbf0ujy0.webp"}})]),s._v(" "),t("p",[t("strong",[s._v("Java代码测试实现")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Queue")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" queue "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LinkedList")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从末尾插入")]),s._v("\n      queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("offer")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//访问队列头元素")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("peek")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//删除队列头元素")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("queue"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("输出结果：")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[2, 3, 7]\n2\n[2, 3, 7]\n2\n[3, 7]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_1-3-链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-链表"}},[s._v("#")]),s._v(" 1.3 链表")]),s._v(" "),t("blockquote",[t("p",[s._v("链表也是线性的顺序存储数据。只是在内存地址上不是连续的，每一个节点里存到下一个节点的指针(Pointer).")])]),s._v(" "),t("h4",{attrs:{id:"_1-3-1-单向链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-单向链表"}},[s._v("#")]),s._v(" 1.3.1 单向链表")]),s._v(" "),t("p",[s._v('单向链表(单链表)是链表的一种，它由节点组成，每个节点都包含下一个节点的指针，下图就是一个单链表，表头为空，表头的后继节点是"\n结点10"(数据为10的结点)，“节点10"的后继结点是"节点20”(数据为10的结点)')]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.11dizczhzfr4.webp"}}),s._v(" "),t("p",[s._v("然后我们来看下删除链表的操作，比如删除30这个节点")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.3su65cpt8l80.webp"}}),s._v(" "),t("p",[s._v("在上面的结构基础上我们再来添加一个节点到链表中")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.3yn40e514f00.webp"}}),s._v(" "),t("h4",{attrs:{id:"_1-3-2-双向链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-双向链表"}},[s._v("#")]),s._v(" 1.3.2 双向链表")]),s._v(" "),t("p",[s._v("双向链表(双链表)\n是链表的一种。和单链表一样，双链表也是由节点组成，它的每个数据结点中都有两个指针，分别指向直接后继和直接前驱。所以，从双向链表中的任意一个结点开始，都可以很方便地访问它的前驱结点和后继结点。一般我们都构造双向循环链表。")]),s._v(" "),t("p",[s._v("双链表的示意图如下：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.1y137dtbmm1s.webp"}}),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v("  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前一个节点")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" prev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后一个节点")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Node")]),s._v(" next"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 链表节点存储的具体数据")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("volatile")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Thread")]),s._v(" thread"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v('双向链表删除节点的操作，比如说下面这个单链表中我们要删除"节点30"')]),s._v(" "),t("p",[t("strong",[s._v("删除之前")]),s._v('：“节点20"的后继节点为"节点30”，“节点30” 的前继节点为"节点20"。“节点30"的后继节点为"节点40”，“节点40”\n的前继节点为"节点30"。')]),s._v(" "),t("p",[t("strong",[s._v("删除之后")]),s._v('：“节点20"的后继节点为"节点40”，“节点40” 的前继节点为"节点20"。')]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.3rbx0lnte0c0.webp"}}),s._v(" "),t("p",[s._v('双向链表添加节点的操作，比如说下面这个双向链表在"节点10"与"节点20"之间添加"节点15"')]),s._v(" "),t("p",[t("strong",[s._v("添加之前")]),s._v('：“节点10"的后继节点为"节点20”，“节点20” 的前继节点为"节点10"。')]),s._v(" "),t("p",[t("strong",[s._v("添加之后")]),s._v('：“节点10"的后继节点为"节点15”，“节点15” 的前继节点为"节点10"。“节点15"的后继节点为"节点20”，“节点20”\n的前继节点为"节点15"。')]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.105m1l9rzkqo.webp"}}),s._v(" "),t("h3",{attrs:{id:"_1-4-栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-栈"}},[s._v("#")]),s._v(" 1.4 栈")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("栈")]),s._v("(stack):\n是限定仅在表尾进行插入或者删除的线性表。对于栈来说，表尾端称为栈顶（top），表头端称为栈低（bottom）。不含元素的空表称为空栈。因为栈限定在表尾进行插入或者删除，所以栈又被称为后进先出的线性表（简称LIFO:\nLast in, First out.结构）。")])]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230822/image.1kefxzu49kkg.webp"}})]),t("h2",{attrs:{id:"_2-非线性数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-非线性数据结构"}},[s._v("#")]),s._v(" 2. 非线性数据结构")]),s._v(" "),t("blockquote",[t("p",[s._v("emsp; 非线性表:与线性表对立，在非线性表之中，数据之间并不是简单的前后关系。非线性表结构：二叉树、堆、图等。")])]),s._v(" "),t("h3",{attrs:{id:"_2-1-树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-树"}},[s._v("#")]),s._v(" 2.1 树")]),s._v(" "),t("p",[s._v(" 树[Tree]是n（n>=0)个结点的有限集。n=0时称为空树。")]),s._v(" "),t("div",{staticClass:"language-text line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("在任意一颗非空树中：\n  1. 有且仅有一个特定的称为根[Root]的结点；\n  2. 当n>1时，其余结点可分为m(m>0)个互不相交的有限集T1、T2、…、Tn，其中每一个集合本身又是一棵树，并且称为根的子树。\n\n此外，树的定义还有以下两点：\n  1. 根结点是唯一的，不可能存在多个根结点，数据结构中的树只能有一个根结点。\n  2. 子树的个数没有限制，但它们一定是互不相交的。\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("如图，是一棵普通树\n"),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.8ucmmmjgiiw.webp"}})]),s._v(" "),t("p",[s._v("度数：结点拥有的子树数目称为结点的 "),t("strong",[s._v("度")]),s._v(" 。\n"),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.70xh46w9w5s0.webp"}})]),s._v(" "),t("p",[s._v("节点关系：")]),s._v(" "),t("ul",[t("li",[s._v("孩子结点")]),s._v(" "),t("li",[s._v("双亲结点")]),s._v(" "),t("li",[s._v("兄弟结点")])]),s._v(" "),t("p",[s._v("节点层次：")]),s._v(" "),t("p",[s._v("  从根开始定义起，根为第一层，根的孩子为第二层，以此类推。")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.fyube09feo.webp"}}),s._v(" "),t("p",[s._v("树的深度：树中结点的最大层次，如上图深度为4")]),s._v(" "),t("h3",{attrs:{id:"_2-2-二叉树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-二叉树"}},[s._v("#")]),s._v(" 2.2 二叉树")]),s._v(" "),t("h4",{attrs:{id:"_2-2-1-概念介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-概念介绍"}},[s._v("#")]),s._v(" 2.2.1 概念介绍")]),s._v(" "),t("blockquote",[t("p",[t("strong",[s._v("二叉树")]),s._v(" ：每个子节点只有两个节点的树，每个结点至多拥有两棵子树(即二叉树中不存在度大于2的结点)\n，并且，二叉树的子树有左右之分，其次序不能任意颠倒。")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4o9iss2a69k0.webp"}}),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.3p2hjo5hbt80.webp"}}),s._v(" "),t("p",[t("strong",[s._v("二叉查找树")]),s._v("也称为有序二叉查找树,满足二叉查找树的一般性质,是指一棵空树具有如下性质：")]),s._v(" "),t("ol",[t("li",[s._v("任意节点左子树不为空,则左子树的值均小于根节点的值")]),s._v(" "),t("li",[s._v("任意节点右子树不为空,则右子树的值均大于于根节点的值")]),s._v(" "),t("li",[s._v("任意节点的左右子树也分别是二叉查找树")]),s._v(" "),t("li",[s._v("没有键值相等的节点")])]),s._v(" "),t("p",[s._v("二叉树又分为：")]),s._v(" "),t("ul",[t("li",[s._v("完美二叉树")]),s._v(" "),t("li",[s._v("完全二叉树")]),s._v(" "),t("li",[s._v("完满二叉树")])]),s._v(" "),t("p",[s._v("完美二叉树：又称为 "),t("strong",[s._v("满二叉树")]),s._v(" ，除了叶子节点之外的每一个节点都有两个孩子节点，每层都被完全填充")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.ewxvdu0paj4.webp"}})]),t("p",[s._v("完全二叉树:除了最后一层之外的其他每一层都被完全填充，并且所有的节点都保持向左对齐")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4f1ayu1jaq20.webp"}})]),t("p",[s._v("完满二叉树：除了叶子节点之外的每一个节点都有两个孩子节点。")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.41krh84rv620.webp"}})]),t("h4",{attrs:{id:"_2-2-2-遍历操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-遍历操作"}},[s._v("#")]),s._v(" 2.2.2 遍历操作")]),s._v(" "),t("p",[s._v("二叉树中的遍历规则有如下三种：")]),s._v(" "),t("p",[s._v("前序遍历：所谓的前序遍历就是先访问根节点，再访问左节点，最后访问右节点，即根-左-右遍历(前序)")]),s._v(" "),t("p",[s._v("中序遍历：所谓的中序遍历就是先访问左节点，再访问根节点，最后访问右节点，即左-根-右遍历")]),s._v(" "),t("p",[s._v("后序遍历：所谓的后序遍历就是先访问左节点，再访问右节点，最后访问根节点。即左-右-根遍历")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.p256glxei8g.webp"}}),s._v(" "),t("p",[s._v("查找最小值：沿着根节点的左子树一路查找，直到最后一个不为空的节点，该节点就是当前这个树的最小节点")]),s._v(" "),t("p",[s._v("查找最大值：沿着根节点的右子树一路查找，直到最后一个不为空的节点，该节点就是当前这个树的最大节点")]),s._v(" "),t("p",[t("strong",[s._v("查找前驱节点")]),s._v(" ：小于当前节点的最大值")]),s._v(" "),t("p",[t("strong",[s._v("查找后继节点")]),s._v(" ：大于当前节点的最小值")]),s._v(" "),t("div",{staticClass:"center-container"},[t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.670h54l26fk0.webp"}})]),t("h4",{attrs:{id:"_2-2-3-删除节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-删除节点"}},[s._v("#")]),s._v(" 2.2.3 删除节点")]),s._v(" "),t("p",[s._v("  二叉树中的删除节点：本质上是找前驱节点或者后继节点来替代")]),s._v(" "),t("ul",[t("li",[s._v("叶子节点直接删除")]),s._v(" "),t("li",[s._v("只有一个子节点的用子节点替代(本质上就是找的前驱节点或者后继节点，左节点就是前驱节点，右节点就是后继节点)")]),s._v(" "),t("li",[s._v("有两个子节点的，需要找到替代节点(替代节点就是前驱节点或者后继节点)")])]),s._v(" "),t("h4",{attrs:{id:"_2-2-4-查找局限性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-查找局限性"}},[s._v("#")]),s._v(" 2.2.4 查找局限性")]),s._v(" "),t("p",[s._v("  一个二叉查找树是由n个节点随机构成,所以，对于某些情况,二叉查找树会退化成一个有n个节点的线性链.\n如下图:")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.5i8akt8f3nc0.webp"}}),s._v(" "),t("h4",{attrs:{id:"_2-2-5-avl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-avl"}},[s._v("#")]),s._v(" 2.2.5 AVL")]),s._v(" "),t("p",[s._v("    BST存在的问题是，树在插入的时候会导致倾斜，不同的插入顺序会导致数的高度不一样，而树的高度直接影响了树的查找效率。最坏的情况所有的节点都在一条斜线上，这样树的高度为N。基于BST存在的问题，平衡查找二叉树（Balanced\nBST）产生了。平衡树的插入和删除的时候，会通过旋转操作将高度保持在LogN。其中两款具有代表性的平衡术分别为AVL树（高度平衡树，具备二叉搜索树的全部特性，而且左右子树高度差不超过1）和红黑树。")]),s._v(" "),t("p",[s._v("AVL树是如何实现平衡的呢？具体是通过左旋或者右旋来实现的。具体如下图：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.5bx8822xgxo.webp"}}),s._v(" "),t("h3",{attrs:{id:"_2-3-2-3-4树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-3-4树"}},[s._v("#")]),s._v(" 2.3 2-3-4树")]),s._v(" "),t("h4",{attrs:{id:"_2-3-1-概念介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-概念介绍"}},[s._v("#")]),s._v(" 2.3.1 概念介绍")]),s._v(" "),t("p",[s._v(" 2-3-4树是四阶的 B树(Balance Tree)，他属于一种多路查找树，它的结构有以下限制：\n  所有叶子节点都拥有相同的深度。\n  节点只能是 2-节点、3-节点、4-节点之一。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("2-节点：包含 1 个元素的节点，有 2 个子节点；")])]),s._v(" "),t("li",[t("p",[s._v("3-节点：包含 2 个元素的节点，有 3 个子节点；")])]),s._v(" "),t("li",[t("p",[s._v("4-节点：包含 3 个元素的节点，有 4 个子节点；")]),s._v(" "),t("p",[s._v("所有节点必须至少包含1个元素\n元素始终保持排序顺序，整体上保持二叉查找树的性质，即父结点大于左子结点，小于右子结点；\n而且结点有多个元素时，每个元素必须大于它左边的和它的左子树中元素。")])])]),s._v(" "),t("p",[s._v("下图是一个典型的 2-3-4树\n"),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.72g4fdp5ne80.webp"}})]),s._v(" "),t("h4",{attrs:{id:"_2-3-2-生成的过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-生成的过程"}},[s._v("#")]),s._v(" 2.3.2 生成的过程")]),s._v(" "),t("p",[s._v(" 接下来我们通过演示来看看2-3-4树生成的过程\n第一次插入---2节点")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.49krqkmnhqe0.webp"}}),s._v(" "),t("p",[s._v("插入第二个节点--3节点 合并")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4277o5o89os0.webp"}}),s._v(" "),t("p",[s._v("插入第三个节点---4节点 合并")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4t2pxmia9ce0.webp"}}),s._v(" "),t("p",[s._v("插入第4个节点---需要分裂")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.65bq25pr1ps0.webp"}}),s._v(" "),t("p",[s._v("插入6")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.6nde0n9pxzg0.webp"}}),s._v(" "),t("p",[s._v("插入7")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.ydt2qerwz34.webp"}}),s._v(" "),t("p",[s._v("插入8")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.2ph6b7fqu0c0.webp"}}),s._v(" "),t("p",[s._v("插入9")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.892z0bpn180.webp"}}),s._v(" "),t("p",[s._v("插入10")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.6qcbkee93gw0.webp"}}),s._v(" "),t("p",[s._v("插入11")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4ef8yc8yr140.webp"}}),s._v(" "),t("p",[s._v("插入12")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.1nsjdl8l1vr4.webp"}}),s._v(" "),t("p",[s._v("最后我们插入1来看看效果")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.240fh15ofnwg.webp"}}),s._v(" "),t("h4",{attrs:{id:"_2-3-3-和红黑树的等价关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-3-和红黑树的等价关系"}},[s._v("#")]),s._v(" 2.3.3 和红黑树的等价关系")]),s._v(" "),t("blockquote",[t("p",[s._v("红黑树起源于2-3-4树，它的本质就是2-3-4树。")])]),s._v(" "),t("h5",{attrs:{id:"_2节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2节点"}},[s._v("#")]),s._v(" 2节点")]),s._v(" "),t("p",[s._v("一个2节点对应的红黑树节点就是一个黑色节点")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.6fjhj2uaszk0.webp"}}),s._v(" "),t("h5",{attrs:{id:"_3节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3节点"}},[s._v("#")]),s._v(" 3节点")]),s._v(" "),t("p",[s._v("一个2节点对应的红黑树节点就是一个黑色节点")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.7544ihv4dc80.webp"}}),s._v(" "),t("p",[s._v("原则：上黑下红")]),s._v(" "),t("h5",{attrs:{id:"_4节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4节点"}},[s._v("#")]),s._v(" 4节点")]),s._v(" "),t("p",[s._v("一个四节点转换的情况只有一种，中间节点黑色，左右节点红色")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.u5z547cpzw0.webp"}}),s._v(" "),t("h5",{attrs:{id:"裂变状态"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#裂变状态"}},[s._v("#")]),s._v(" 裂变状态")]),s._v(" "),t("p",[s._v("在2-3-4树中存在的裂变状态。转换为红黑树后会先变色(不能有两个相邻的红色节点)。")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4ogexfmhelq0.webp"}}),s._v(" "),t("h4",{attrs:{id:"_2-3-4-转换为红黑树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4-转换为红黑树"}},[s._v("#")]),s._v(" 2.3.4 转换为红黑树")]),s._v(" "),t("p",[s._v("接下来具体看看一个2-3-4树是如何转换为对应的红黑树的")]),s._v(" "),t("p",[s._v("原始的2-3-4树：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.6yd0n0g5d8o0.webp"}}),s._v(" "),t("p",[s._v("按照右倾规则来转换为：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.2jy2x3o80y20.webp"}}),s._v(" "),t("p",[s._v("转换后满足黑色节点平衡的要求")]),s._v(" "),t("p",[s._v("按照左倾规则来转换为：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230823/image.4jb7c8x1a160.webp"}}),s._v(" "),t("h3",{attrs:{id:"_2-4-红黑树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-红黑树"}},[s._v("#")]),s._v(" 2.4 红黑树")]),s._v(" "),t("p",[s._v("红黑树，Red-Black Tree 「RBT」是一个自平衡(不是绝对的平衡)的BST)，树上的每个节点都遵循下面的规则:")]),s._v(" "),t("ul",[t("li",[s._v("每个节点要么是黑色，要么是红色。")]),s._v(" "),t("li",[s._v("根节点是黑色。")]),s._v(" "),t("li",[s._v("每个叶子节点（NIL）是黑色。")]),s._v(" "),t("li",[s._v("每个红色结点的两个子结点一定都是黑色。")]),s._v(" "),t("li",[s._v("任意一结点到每个叶子结点的路径都包含数量相同的黑结点")])]),s._v(" "),t("p",[s._v("红黑树能自平衡，它靠的是什么？三种操作：左旋、右旋和变色")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("操作")]),s._v(" "),t("th",[s._v("描述")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("左旋")]),s._v(" "),t("td",[s._v("以某个结点作为支点(旋转结点)，其右子结点变为旋转结点的父结点，"),t("br"),s._v("右子结点的左子结点变为旋转结点的右子结点，左子结点保持不变。")])]),s._v(" "),t("tr",[t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("右旋")]),s._v(" "),t("td",[s._v("以某个结点作为支点(旋转结点)，其左子结点变为旋转结点的父结点，"),t("br"),s._v("左子结点的右子结点变为旋转结点的左子结点，右子结点保持不变。")])]),s._v(" "),t("tr",[t("td"),s._v(" "),t("td")]),s._v(" "),t("tr",[t("td",[s._v("变色")]),s._v(" "),t("td",[s._v("结点的颜色由红变黑或由黑变红。")])])])]),s._v(" "),t("h4",{attrs:{id:"_2-4-1-旋转操作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-1-旋转操作"}},[s._v("#")]),s._v(" 2.4.1 旋转操作")]),s._v(" "),t("h5",{attrs:{id:"概念讲解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念讲解"}},[s._v("#")]),s._v(" 概念讲解")]),s._v(" "),t("p",[t("strong",[s._v("左旋")]),s._v("：以某个节点作为旋转点，其右子节点变为旋转节点的父节点，右子节点的左子节点变为旋转节点的右子节点，左子节点保持不变。")]),s._v(" "),t("blockquote",[t("p",[s._v("左旋演示动图： https://img-blog.csdnimg.cn/20210615101118357.gif")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.48s7rv3i7li0.webp"}}),s._v(" "),t("p",[t("strong",[s._v("右旋")]),s._v("：以某个节点作为旋转点，其左子节点变为旋转节点的父节点，左子节点的右子节点变为旋转节点的左子节点，右子节点保持不变。")]),s._v(" "),t("blockquote",[t("p",[s._v("左旋演示动图： https://img-blog.csdnimg.cn/20210615101152636.gif")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.34eao7k2h240.webp"}}),s._v(" "),t("h5",{attrs:{id:"代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码实现"}},[s._v("#")]),s._v(" 代码实现")]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("package")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("A")]),s._v("练习"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("红黑树"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("BRTree")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RED")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("BLACK")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRoot")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRoot")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" root"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 节点\n     *\n     * @param <K>\n     * @param <V>\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),t("span",{pre:!0,attrs:{class:"token generics"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Comparable")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 节点是双向的")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setParent")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setLeft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getRight")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setRight")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("isColor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setColor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("color "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" color"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setKey")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("K")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("key "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" key"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("getValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("V")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br"),t("span",{staticClass:"line-number"},[s._v("82")]),t("br"),t("span",{staticClass:"line-number"},[s._v("83")]),t("br"),t("span",{staticClass:"line-number"},[s._v("84")]),t("br"),t("span",{staticClass:"line-number"},[s._v("85")]),t("br"),t("span",{staticClass:"line-number"},[s._v("86")]),t("br"),t("span",{staticClass:"line-number"},[s._v("87")]),t("br"),t("span",{staticClass:"line-number"},[s._v("88")]),t("br"),t("span",{staticClass:"line-number"},[s._v("89")]),t("br"),t("span",{staticClass:"line-number"},[s._v("90")]),t("br"),t("span",{staticClass:"line-number"},[s._v("91")]),t("br"),t("span",{staticClass:"line-number"},[s._v("92")]),t("br"),t("span",{staticClass:"line-number"},[s._v("93")]),t("br")])]),t("blockquote",[t("p",[s._v("左旋实现")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 左旋\n     * 围绕p左旋\n     * p                 pr(r)\n     * /  \\                /  \\\n     * pl   pr(r)  =>      p    rr\n     * / \\                / \\\n     * rl  rr            pl  rl\n     * 左旋的时候\n     * 1) p-pl 和 pr(r)-rr 的关系不变\n     * 2) pr(r)-rl 要变成 p-rl\n     *    rl变为p的右节点，同时p为rl的父节点\n     * 3) 要判断p是否有父节点\n     *    3.1) 如果没有\n     *        pr(r)变为root节点，即p的父节点\n     *    3.2） 如果有\n     *        pr(r).parent = p.parent\n     *        同时还需要设置pr(r)为p.parent的子节点（可能左，也可能右）\n     *        if p.parent.left = p\n     *          则 p.parent.left = pr(r)\n     *        else\n     *          p.parent.right = pr(r)\n     *    最后\n     *        p.parnet = pr(r)\n     *        pr(r).left = p\n     *\n     * @param p\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("leftRotate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2) pr(r)-rl 要变成 p-rl")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置p的右节点为r的左节点")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 设置r的父节点为p")]),s._v("\n                r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3) 判断p是否又父节点")]),s._v("\n            r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 没有父节点")]),s._v("\n                root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后 设置 p 为 r 的左子节点")]),s._v("\n            p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br")])]),t("blockquote",[t("p",[s._v("右旋实现")])]),s._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n     * 右旋\n     * 围绕p左旋\n     *     p               pr(r)\n     *   /   \\             / \\\n     * pl(r)  pr   =>    rl    p\n     * / \\                    / \\\n     * rl  rr               rr   pr\n     * \n     * 1) p-pr 和 r-rl 关系不变\n     * 2) p变成r的右子节点，rr变成p的左子节点\n     * 3) 判断p有没有父节点\n     *    r.parent = p.parent\n     *    1） 如果没有 root = r\n     *    2) 如果有\n     *        需要判断p为p.parent 的左节点还是右子节点\n     *        if p.parent.left == p  -> p.parent.left = r\n     *        else p.parent.right = r\n     *    最后\n     *      r.right = p\n     *      p.parent = r\n     *\n     * @param p\n     */")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rightRotate")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2)  p变成r的右子节点，rr变成p的左子节点,同时设置子节点的父节点")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("RBNode")]),s._v(" r "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果r的右子节点不为空，设置其父节点为p")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n            r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 3） 判断p有没有父节点")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                root "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("left "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 最后设置p和r的关系")]),s._v("\n            r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("right "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("parent "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" r"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br")])]),t("h4",{attrs:{id:"_2-4-2-新增节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-2-新增节点"}},[s._v("#")]),s._v(" 2.4.2 新增节点")]),s._v(" "),t("iframe",{attrs:{src:"https://www.processon.com/view/link/60c21e25e401fd34a1514d25",width:"100%",height:"500",frameborder:"0",scrolling:"No",leftmargin:"0",topmargin:"0"}}),s._v(" "),t("p",[s._v("2-3-4树中结点添加需要遵守以下规则：")]),s._v(" "),t("ul",[t("li",[s._v("插入都是向最下面一层插入")]),s._v(" "),t("li",[s._v("升元：将插入结点由 2-结点升级成 3-结点，或由 3-结点升级成 4-结点；")]),s._v(" "),t("li",[s._v("向 4-结点插入元素后，需要将中间元素提到父结点升元，原结点变成两个 2-结点，再把元素插入2-结点中，如果父结点也是 4-结点，则递归向上层升元，至到根结点后将树高加1；")])]),s._v(" "),t("p",[s._v("而将这些规则对应到红黑树里，就是：")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("新插入的结点颜色为 红色 ，这样才可能不会对红黑树的高度产生影响。")])]),s._v(" "),t("li",[t("p",[s._v("2-结点对应红黑树中的单个黑色结点，插入时直接成功（对应 2-结点升元）。")])]),s._v(" "),t("li",[t("p",[s._v("3-结点对应红黑树中的 黑+红 子树，插入后将其修复成 红+黑+红 子树（对应 3-结点升元）；")])]),s._v(" "),t("li",[t("p",[s._v("4-结点对应红黑树中的 红+黑+红 子树，插入后将其修复成 红色祖父+黑色父叔+红色孩子 子树，然后再把祖父结点当成新插入的红色结点递归向上层修复，直至修复成功或遇到 root 结点；")]),s._v(" "),t("p",[s._v("公式："),t("strong",[s._v("红黑树")]),s._v("+新增一个节点（红色） === 对等的2-3-4树+新增一个节点")])])]),s._v(" "),t("h5",{attrs:{id:"新增节点示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新增节点示例"}},[s._v("#")]),s._v(" 新增节点示例")]),s._v(" "),t("p",[s._v("通过新增2-3-4树的过程来映射对应的红黑树的节点新增")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.56swsya2e1c0.webp"}}),s._v(" "),t("p",[t("strong",[s._v("2-3-4树的新增（全部在叶子节点完成）")])]),s._v(" "),t("p",[t("strong",[s._v("1.新增一个节点: 2 节点")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.1cst7m77kdxc.webp"}}),s._v(" "),t("p",[t("strong",[s._v("2.新增一个节点: 与2节点合并，直接合并")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.7bn99mhshd00.webp"}}),s._v(" "),t("p",[t("strong",[s._v("3.新增一个节点，与3节点合并，直接合并")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.49uwuc69dfg0.webp"}}),s._v(" "),t("p",[s._v("对应的红黑树为：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.5esbsn5n2zg0.webp"}}),s._v(" "),t("p",[t("strong",[s._v("4.新增一个节点，与4节点合并，此时需要分裂")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.3ekhfdp5wiy0.webp"}}),s._v(" "),t("p",[t("strong",[s._v("插入值的位置可能是")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.je10a5m37lk.webp"}}),s._v(" "),t("p",[s._v("对应的红黑树的结构为")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230825/image.5rwd3v4d1ng0.webp"}}),s._v(" "),t("h5",{attrs:{id:"新增代码实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#新增代码实现"}},[s._v("#")]),s._v(" 新增代码实现")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("代码实现待补充...")])]),s._v(" "),t("h4",{attrs:{id:"红黑树删除节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#红黑树删除节点"}},[s._v("#")]),s._v(" 红黑树删除节点")]),s._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),t("p",[s._v("待补充...")])]),s._v(" "),t("h3",{attrs:{id:"_2-5-b树和b-树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-b树和b-树"}},[s._v("#")]),s._v(" 2.5 B树和B+树")]),s._v(" "),t("h4",{attrs:{id:"_2-5-1-b树-balanced-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-b树-balanced-tree"}},[s._v("#")]),s._v(" 2.5.1 B树（Balanced Tree）")]),s._v(" "),t("blockquote",[t("p",[s._v("这个就是我们的多路平衡查找树，叫做B-Tree（B代表平衡）。\n跟AVL树一样，B树在枝节点和叶子节点存储键值、数据地址、节点引用。\n它有一个特点：分叉数（路数）永远比关键字数多1。比如我们画的这棵树，每个节点存储两个关键字，那么就会有三个指针指向三个子节点。")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230826/image.1plx2787qdts.webp"}}),s._v(" "),t("p",[s._v("B Tree的查找规则是什么样的呢？\n比如我们要在这张表里面查找15。\n因为15小于17，走左边。\n因为15大于12，走右边。\n在磁盘块7里面就找到了15，只用了3次IO。")]),s._v(" "),t("p",[s._v("这个是不是比AVL 树效率更高呢？\n那B Tree又是怎么实现一个节点存储多个关键字，还保持平衡的呢？跟AVL树有什么区别？\n比如Max Degree（路数）是3的时候，我们插入数据1、2、3，在插入3的时候，本来应该在第一个磁盘块，但是如果一个节点有三个关键字的时候，意味着有4个指针，子节点会变成4路，所以这个时候必须进行分裂（其实就是B+Tree）。把中间的数据2提上去，把1和3变成2的子节点。\n如果删除节点，会有相反的合并的操作。\n注意这里是分裂和合并，跟AVL树的左旋和右旋是不一样的。\n我们继续插入4和5，B Tree又会出现分裂和合并的操作。")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230826/image.iwi1tgv5i8w.webp"}}),s._v(" "),t("p",[s._v("从这个里面我们也能看到，在更新索引的时候会有大量的索引的结构的调整，所以解释了为什么我们不要在频繁更新的列上建索引，或者为什么不要更新主键。\n节点的分裂和合并，其实就是InnoDB页（page）的分裂和合并")]),s._v(" "),t("h4",{attrs:{id:"_2-5-2-b-树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-b-树"}},[s._v("#")]),s._v(" 2.5.2 B+树")]),s._v(" "),t("p",[s._v("加强版多路平衡查找树\n因为B Tree的这种特性非常适合用于做索引的数据结构，所以很多文件系统和数据库的索引都是基于B Tree的。\n但是实际上，MySQL里面使用的是B Tree的改良版本，叫做B+Tree（加强版多路平衡查找树）。")]),s._v(" "),t("p",[s._v("B+树的存储结构：")]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230826/image.632vuvvtl1s0.webp"}}),s._v(" "),t("p",[s._v("MySQL中的B+Tree有几个特点：")]),s._v(" "),t("ul",[t("li",[s._v("它的关键字的数量是跟路数相等的；")]),s._v(" "),t("li",[s._v("B+Tree的根节点和枝节点中都不会存储数据，只有叶子节点才存储数据。InnoDB 中 B+ 树深度一般为 1-3 层，它就能满足千万级的数据存储。搜索到关键字不会直接返回，会到最后一层的叶子节点。比如我们搜索id=28，虽然在第一层直接命中了，但是全部的数据在叶子节点上面，所以我还要继续往下搜索，一直到叶子节点。")]),s._v(" "),t("li",[s._v("B+Tree的每个叶子节点增加了一个指向相邻叶子节点的指针，它的最后一个数据会指向下一个叶子节点的第一个数据，形成了一个有序链表的结构。")])]),s._v(" "),t("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20230826/image.wu2ruenekts.webp"}}),s._v(" "),t("p",[s._v("总结一下， B+Tree的特点带来的优势：")]),s._v(" "),t("ul",[t("li",[s._v("它是B Tree的变种，B Tree能解决的问题，它都能解决。B Tree解决的两大问题是什么？（每个节点存储更多关键字；路数更多）")]),s._v(" "),t("li",[s._v("扫库、扫表能力更强（如果我们要对表进行全表扫描，只需要遍历叶子节点就可以了，不需要遍历整棵B+Tree拿到所有的数据）")]),s._v(" "),t("li",[s._v("B+Tree的磁盘读写能力相对于B Tree来说更强（根节点和枝节点不保存数据区，所以一个节点可以保存更多的关键字，一次磁盘加载的关键字更多）")]),s._v(" "),t("li",[s._v("排序能力更强（因为叶子节点上有下一个数据区的指针，数据形成了链表）")]),s._v(" "),t("li",[s._v("效率更加稳定（B+Tree永远是在叶子节点拿到数据，所以IO次数是稳定的）")])])])}),[],!1,null,null,null);t.default=e.exports}}]);