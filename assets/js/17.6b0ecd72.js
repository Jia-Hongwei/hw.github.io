(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{335:function(t,s,a){"use strict";a.r(s);var e=a(7),r=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h3",{attrs:{id:"_1-概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-概述"}},[t._v("#")]),t._v(" 1. 概述")]),t._v(" "),s("blockquote",[s("p",[t._v("定义一系列算法，把它们一个个封装起来，并且使它们可以相互替换。")]),t._v(" "),s("p",[t._v("策略模式是一个将算法封装起来的模式，然后提供一个set函数来让它们可以相互替换，这个模式让算法可独立于使用它的客户而变化。")])]),t._v(" "),s("p",[s("strong",[t._v("适合用策略模式的场景")])]),t._v(" "),s("ul",[s("li",[t._v("一个类有很多种行为，使用这个模式可以避免在类中使用大量的条件语句（不同的用户调用，不要写成if判断是哪个用户，直接set设置就在同一个接口函数中表现出不一样的行为）")]),t._v(" "),s("li",[t._v("程序不希望暴露复杂的、与算法相关的数据结构")]),t._v(" "),s("li",[t._v("需要使用一个算法的不同变体")])]),t._v(" "),s("h3",{attrs:{id:"_2-结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-结构"}},[t._v("#")]),t._v(" 2. 结构")]),t._v(" "),s("img",{attrs:{src:"https://jsd.cdn.zzko.cn/gh/Jia-Hongwei/picx-images-hosting@master/20231128/image.3x17q7aw28w0.webp"}})])}),[],!1,null,null,null);s.default=r.exports}}]);